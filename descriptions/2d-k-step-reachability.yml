maxRobotVision:
  x: 3
  y: 3

staticProperty:
  WALL:
    include: False
    ranges:
    - x: [1, 10]
      y: [1, 5]
  GOAL:
    include: True
    values:
      x: [10]
      y: [5]

state:
  StateRobotPos:
    type: vector
    init: random
    ranges:
    - x: [1, 10]
      y: [1, 5]
  StateRobotAct:
    type: robotAction
    mapping:
      p: StateRobotPos

atomicPropositions:
  HitsWALL:
    init: 0
    value: 'check_prop_WALL(StateRobotPosx, StateRobotPosy) == 1'
  ReachesGOAL:
    init: 0
    value: 'check_prop_GOAL(StateRobotPosx, StateRobotPosy) == 1'

# livenessSpec:

invariantSpecs:
- 'HitsWALL == 0'

safetySpecs:
- '(T > 10 + 5) ==> (ReachesGOAL == 1)'

actionTypes:
  robotAction:
    actions:
      UP:
        update: p.y = p.y + 1
      DOWN:
        update: p.y = p.y - 1
      LEFT:
        update: p.x = p.x - 1
      RIGHT:
        update: p.x = p.x + 1
      NONE:
        update: p.x = p.x
    mapping:
    - p

dimensions:
  x: 0
  y: 1
