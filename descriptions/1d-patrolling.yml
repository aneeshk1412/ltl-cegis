Dimensions:
  x: 0

MaxRobotVision:
  x: 3

StaticProperty:
  WALL:
    include: False
    ranges:
    - x: [-10, 10]
  CHECKPOINT1:
    include: True
    ranges:
    - x: -8
  CHECKPOINT2:
    include: True
    ranges:
    - x: 8

# <NOTE> the letter p will be replaced by the state variable 
# on which the action update will be applied
Action: 
  LEFT:
    value: 102
    update: px = px - 1
  RIGHT:
    value: 101
    update: px = px + 1
  NONE:
    value: 100
    update: '__VERIFIER_error()'

State:
  StateRobotPos:
    type: Vector
    init: random
    ranges:
    - x: [-10, 10]
    acted: StateRobotAct
  StateRobotAct:
    type: int
    init: random
    ranges:
    - LEFT
    - RIGHT

AtomicPropositions:
  hits_wall:
    init: 0
    value: 'check_prop_WALL(StateRobotPosx) == 1'
  reaches_checkpoint1:
    init: 0
    value: 'check_prop_CHECKPOINT1(StateRobotPosx) == 1'
  reaches_checkpoint2:
    init: 0
    value: 'check_prop_CHECKPOINT2(StateRobotPosx) == 1'

LivenessSpec: '[]<>(AP(reaches_checkpoint1 == 1)) && []<>(AP(reaches_checkpoint2 == 1))'

SafetySpecs:
- 'hits_wall == 0'
