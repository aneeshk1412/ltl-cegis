maxRobotVision:
  x: 3
  y: 3

staticProperty:
  WALL:
    include: False
    ranges:
    - x: [1, 5]
      y: [1, 6]
  GOAL:
    include: True
    values:
      x: [5]
      y: [1]
  HOLE:
    include: True
    values:
      x: [3, 4, 3, 3, 3]
      y: [6, 5, 4, 2, 1]

state:
  StateRobotPos:
    type: vector
    init: random
    values:
      x: [1]
      y: [6]
  StateRobotAct:
    type: robotAction
    mapping:
      p: StateRobotPos

atomicPropositions:
  HitsWALL:
    init: 0
    value: 'check_prop_WALL(StateRobotPosx, StateRobotPosy) == 1'
  HitsHOLE:
    init: 0
    value: 'check_prop_HOLE(StateRobotPosx, StateRobotPosy) == 1'
  ReachesGOAL:
    init: 0
    value: 'check_prop_GOAL(StateRobotPosx, StateRobotPosy) == 1'

# livenessSpec:

invariantSpecs:
- 'HitsWALL == 0'
- 'HitsHOLE == 0'

safetySpecs:
- '(T > 5 + 6) ==> (ReachesGOAL == 1)'

actionTypes:
  robotAction:
    actions:
      UP:
        value: 104
        update: p.y = p.y + 1
      DOWN:
        value: 103
        update: p.y = p.y - 1
      LEFT:
        value: 102
        update: p.x = p.x - 1
      RIGHT:
        value: 101
        update: p.x = p.x + 1
      NONE:
        value: 100
        update: p.x = p.x
    mapping:
    - p

dimensions:
  x: 0
  y: 1
